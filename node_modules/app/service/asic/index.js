'use strict';

var url = require('url');
var $ = require('jquery');

angular.module('tangHelper.minerService', ['ng'])
    .config(function($httpProvider) {
        $httpProvider.defaults.transformRequest.unshift(function(data, headers) {
            if (angular.isObject(data)) {
                headers()['Content-Type'] = "application/x-www-form-urlencoded; charset=utf-8";
                return $.param(data);
            }
            return data;
        });
    })
    .factory('operate', function($http, $q, $timeout) {
        return function(conf) {
            function loop() {
                count++;

                $http.post(urlString, {
                    JMIP: '192.168.1.188',
                    JMSK: '255.255.255.0',
                    JGTW: '192.168.1.1',
                    WPRT: 8000,
                    JSPT: 7478,
                    PDNS: '192.168.1.201',
                    SDNS: '8.8.8.8.8',
                    MURL: 'us1.ghash.io',
                    MPRT: 3334,
                    USEF: 'ekousp.no2',
                    PASO: 123,
                    GCLK: 270,
                    RNTM: 120,
                    RCTM: 3600,
                    SMRT: 0,
                    update: 'Update/Restart'
                }).then(function(response) {
                    if (response.status === 200) {
                        return df.resolve();
                    }
                    if (count >= 3) {
                        df.reject();
                    } else {
                        loop.timer = $timeout(loop, 500);
                    }
                }, function() {
                    if (count >= 3) {
                        df.reject();
                    } else {
                        loop.timer = $timeout(loop, 500);
                    }
                });
            }

            var urlObject = {
                protocol: 'http',
                host: conf.minerDefaultAddress,
                pathname: 'Settings'
            };
            var urlString = url.format(urlObject);

            var df = $q.defer();
            var count = 0;

            loop();

            return df.promise;

        };
    });