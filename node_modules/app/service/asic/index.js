'use strict';

var url = require('url');
var $ = require('jquery');

angular.module('tangHelper.minerService', ['ng'])
    .config(function($httpProvider) {
        $httpProvider.defaults.transformRequest.unshift(
            function(data, headers) {
                if (angular.isObject(data)) {
                    headers()['Content-Type'] =
                        'application/x-www-form-urlencoded; charset=utf-8';
                    return $.param(data);
                }
                return data;
            });
    })
    .factory('operate', function($http, $q, $timeout, formatUserName) {
        return function(minerConfig) {
            function loop() {
                count++;

                $http.post(urlString, {
                    JMIP: minerConfig.IP,
                    JMSK: minerConfig.mask,
                    JGTW: minerConfig.gateway,
                    WPRT: 8000,
                    JSPT: 7478,
                    PDNS: minerConfig.dns1,
                    SDNS: minerConfig.dns2 || '8.8.8.8',
                    MURL: minerConfig.pool1URL,
                    MPRT: minerConfig.pool1Port,
                    USEF: username,
                    PASO: 123,
                    GCLK: 270,
                    RNTM: 120,
                    RCTM: 3600,
                    SMRT: 0,
                    update: 'Update/Restart'
                }).then(function(response) {
                    if (response.status === 200) {
                        return df.resolve();
                    }
                    if (count >= 3) {
                        df.reject();
                    } else {
                        loop.timer = $timeout(loop, 500);
                    }
                }, function() {
                    if (count >= 3) {
                        df.reject();
                    } else {
                        loop.timer = $timeout(loop, 500);
                    }
                });
            }

            var urlObject = {
                protocol: 'http',
                host: minerConfig.minerDefaultAddress,
                pathname: 'Settings'
            };
            var urlString = url.format(urlObject);
            var username = formatUserName(minerConfig.username,
                minerConfig.prefix, minerConfig.IP);

            var df = $q.defer();
            var count = 0;

            loop();

            return df.promise;

        };
    });